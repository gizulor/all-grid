/* scss/6-layouts/_l_grid.scss */

.l_grid {
  display: grid;
  grid-gap: my-bs(1.5) var(--base-unit);
  @media (max-width: $small) {
    display: block;

    >* {
      margin-bottom: 10vh;
    }

    &--mobile {
      display: grid;

      >* {
        margin-bottom: inherit;
      }
    }
  }

  &--gap-small {
    grid-gap: my-bs(.5) var(--base-unit--s);
  }

  @media (min-width: $desktop) {
    &--gap-large {
      grid-gap: my-bs(3) var(--base-unit--b);

    }
  }

  &--twin {
    grid-template-columns: 1fr 1fr;
  }

  &--tri {
    grid-template-columns: 1fr 1fr 1fr;
  }

  &--quad {
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }


  @media (min-width: $small) {

    &--twin\@small {
      grid-template-columns: 1fr 1fr;
    }

    &--tri\@small {
      grid-template-columns: 1fr 1fr 1fr;
    }

    &--quad\@small {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }
  }

  @media (min-width: $medium) {
    &--tri\@medium {
      grid-template-columns: 1fr 1fr 1fr;
    }

    &--quad\@medium {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }

  }

  @media (min-width: $desktop) {
    &--tri\@desktop {
      grid-template-columns: 1fr 1fr 1fr;
    }

    &--quad\@desktop {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }

  }

  &--auto {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }



  .self-right {
    justify-self: end;
  }


  &.top {
    // default
    align-items: start;
  }

  &.middlev {
    align-items: center;
    align-content: center;
  }

  &.bottom {
    align-items: end;
    align-content: end;
  }

  &.space-between {
    justify-content: space-between;
  }

  &.left {
    // default
    justify-content: start;
  }

  &.middle {
    justify-content: center;
  }

  &.right {
    justify-content: end;
  }


  @media (min-width: $small) {
    &--images {
      figure {
        margin-bottom: 10vh;
      }
    }


    &.staggered { // applies to image galleries only

      // grid-template-rows: auto min-content;
      // grid-auto-flow: dense;
      .landscape {
        grid-column: span 2;

        @media screen and (min-width: $desktop) {
          &:nth-of-type(odd) {
            grid-column: span 3;
            grid-column-end: -1;
          }

          &+.landscape {
            grid-column-end: -1;
          }
        }
      }

      .square {
        grid-column: span 2;
        grid-row: span 2;
      }

      .portrait {

        &:nth-of-type(even) {
          grid-row: span 2;
          grid-column: span 2;
        }

        // &+.portrait {
        //grid-row: span 3;
        //grid-column: span 3;
        // }
      }


    }
  }
}